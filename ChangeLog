2009-05-24  Francesco Piccinno  <stack.box@gmail.com>
	* PM/Gui/Widgets/Plotter.py
	  PM/Gui/Widgets/PropertyGrid.py:
	   - Fixing various bugs due to ConditionalField used by Scapy.
	* PM/Backend/Scapy/wrapper.py:
	   - Added a new function is_showable_field() to manage this situation.
	   - Various fix for ConditionalField.
	* PM/Backend/Scapy/packet.py:
	   - Added rebuild_from_raw_payload() to MetaPacket.
	* PM/Gui/Pages/PacketPage.py:
	   - Add the possibility to edit the packet directly from the HexView.
	* PM/Gui/Widgets/PyGtkHexView.py:
	   - Added a popup menu for common actions like cut/copy/paste.
    * PM/Gui/Plugins/Network.py
      PM/Gui/Plugins/PathPage.py
      PM/Gui/Plugins/PluginPage.py
      PM/Gui/Plugins/Tree.py
      PM/Gui/Plugins/Update.py
      PM/Gui/Plugins/Containers.py
      PM/Gui/Plugins/Engine.py
      PM/Gui/Plugins/Window.py
      PM/Backend/Scapy/Context/Sniff.py
      PM/Backend/Scapy/utils.py:
        - Switch to new plugin schema.
    * plugins/geoip/setup.py
      plugins/traceroute/setup.py:
        - Fix the setup.py to fit schema change.

	Insert mode for HexView implemented.
	80 columns line wrap fixed in various files and general bug fixing.

2009-05-19 Francesco Piccinno <stack.box@gmail.com>
    * PM/Backend/Scapy/Context/Sniff.py
      PM/Backend/Scapy/utils.py:
        - Moving helper related code to utils.
        - Various fix for win32. Now the dumpcap helper should work great.
          Windump seems to not print the packets captured on the stderr
          so not works as excepted.
    * PM/Gui/Dialogs/Interface.py:
        - Repopulate the store on capmethod changes. This is required for
          windows because tcpdump/dumpcap doesn't understand the interface
          nomenclature used by libdnet python binding.
    * PM/PacketManipulator:
        - Reverting to pygtk >= 2.10 requirement. 2.14 seems to be not
          available yet on windows.

    Win32 fixes.

2009-05-18 Francesco Piccinno <stack.box@gmail.com>
    * PM/Backend/Scapy/Context/Sniff.py
      PM/Backend/Scapy/utils.py:
        - Moving all helper related code to utils.py to make SendReceive and
          SequenceConsumer benefit of it.
2009-05-17 Francesco Piccinno <stack.box@gmail.com>
    * PM/Gui/Dialogs/Preferences.py
      PM/Gui/Core/App.py
      PM/Gui/Manager/PreferenceManager.py:
        - Added a check for python version (that should be >= 2.6)
        - Making checks for root/correct python version optional by
          adding it in pm-prefs.xml file, and in SectionPage of
          Preference dialog.
    * PM/Gui/Core/MainWindow.py
      PM/Gui/Core/GdlPaned.py:
        - Added a gdl paned implementation. You need gnome-python-extra
          package to use that implementation.
    * TODO: Cleaned up
    * PM/Gui/pages/PacketPage.py
      PM/Gui/Widgets/PyGtkHexView.py:
        - Added a new implementation of read/write hex view.
    * PM/Backend/Scapy/packet.py:
        - Added new method get_protocol_bounds() to MetaPacket class.
    * PM/Backend/Scapy/wrapper.py:
        - Added new function get_proto_size() used by MetaPacket.
    * PM/Gui/Tabs/PropertyTab.py:
        - Now if the user select a protocol in the ProtocolHierarchy the
          selection will be propagated to the hexview with the same behaviour
          of field selection but for the entire protocol. See also wireshark.
    * PM/Gui/Widgets/PropertyGrid.py:
        - Added the possibility to use PyGtkHexView class to edit string fields
          that can't be converted to utf-8 string. This should close all bugs
          related to the missing read/write hexview implementation.

    Fixed various bug and regression.
    80 columns line wrap fixed in various files.

2009-05-16 Francesco Piccinno <stack.box@gmail.com>

    * PacketManipulator:
        - Added --debug option to spawn a gdb session when the launcher is
          started.
    * PM/PacketManipulator:
        - now we require pygtk >= 2.14
    * PM/Gui/Pages/SniffPage.py:
        - 80 columns line wrap fixed.
        - Created two differents treemode to store informations (gtk.ListStore
          to improve the performance while sniffing, and gtk.TreeStore to have
          the possibility to use the flow organizer)
    * PM/Gui/Dialogs/Interface.py:
        - 80 columns line wrap fixed.
        - Added a new ComboBox to select the method to use for the SniffSession
        - Set a tooltip to the pcap filter info button
        - Fixed various alignment bugs.
    * PM/Gui/Dialogs/Preferences.py:
        - Adding a new 'Helpers' section letting the user choose the correct
          path for tcpdump and dumpcap programs.
    * PM/Backend/Scapy/Context/Sniff.py:
        - Adding the possibility to use tcpdump/pcap or virtual interface for
          sniffing to avoid performance problems or CPU burning as reported.

          These methods (tcpdump/dumpcap) should remove the risk of packet
          loss also, but uses a temporary file created with tempfile.mktemp()

          In this case we use fcntl to set O_NONBLOCK to stderr pipe created
          by the subprocess module. This code works on *NIX and *BSD systems
          that offers select() over simple file descriptor. I should implement
          the missing code for Windows system and use PeekNamedPipe.
        - Implemented error propagation trough exit_from_thread() method
    * PM/Backend/Scapy/Context/Static.py:
        - Avoid a cumulative call to PacketList constructor to reduce memory
          usage.

    Various bugfix.

2009-05-11 Francesco Piccinno <stack.box@gmail.com>

    Init ChangeLog.
